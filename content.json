{"meta":{"title":"WuDi's Blog","subtitle":"","description":"Keep Moving","author":"WuDi","url":"http://awesomecoder.top","root":"/"},"pages":[{"title":"About","date":"2021-05-07T08:16:23.000Z","updated":"2022-02-17T09:04:03.045Z","comments":true,"path":"about/index.html","permalink":"http://awesomecoder.top/about/index.html","excerpt":"","text":"Fucking the world"},{"title":"categories","date":"2021-05-07T11:57:01.000Z","updated":"2021-05-07T11:58:33.365Z","comments":true,"path":"categories/index.html","permalink":"http://awesomecoder.top/categories/index.html","excerpt":"","text":""},{"title":"resume","date":"2021-05-07T12:27:49.000Z","updated":"2022-02-17T11:14:21.302Z","comments":true,"path":"resume/index.html","permalink":"http://awesomecoder.top/resume/index.html","excerpt":"","text":"EducationPhD in Electronic Information EngineeringBeihang University (Sep 2021 - now, Beijing, China), advisor: Prof. Daifa Wang MSc in Aerospace Engineering,Beihang University (Sep 2017 - Jan 2020, Beijing, China), advisor: Prof. Huiyong Li BSc in Information and Computing ScienceTaiyuan University of Technology (Sep 2013 - July 2017, Taiyuan, China) Research and Industry Experience*Analysis of biomedical signal and electronic medical records, Algorithm Engineer, Chinese PLA General Hospital Research Center of Medical Artificial Intelligence, Beijing, 2020.3-2021.8* Responsible for the analysis and processing of multi-modal biomedical signals including basic feature extraction, motion artifact interference processing, signal filtering and depth analysis Developing techniques of deep learning for precise medical treatment *Multi-partition real time micro kernel operating system, Internship, ACINFO Corporation, Beijing, 2018.7-2018.11* Engaged in developing some modules of a real time os SylixOS, including partition module, memory management module, interrupt &amp; request module and microkernel thread module Developing techniques of deep learning for real-time detection of pedestrians and vehicles in traffic scenes with complex backgrounds Adopting Super resolution, which adds additional prior knowledge for tiny objects, to tackle with the poor detection accuracy and insufficient high frequency information of small objects Artificial intelligence subsystem in mobile games, Senior Software Development Engineer, Netease Games, Hangzhou, 2015.7-2016.7 Developed AI framework via technique of Finite State Machine (FSM) and Behavior Tree (BT) for monsters and bosses in mobile game Completed auto battle system to help characters to continue fighting even the player is offline Developed ancient god card subsystem which is responsible for skill selections [Student] Transaction Agent System, Test Engineer, BUAA-Lab of Distributed and Mobile Computing, Beijing, 2017.7-2020.1 Developed an automatic test framework of Transaction Agent System to ensure new code in development does not bring bugs to the previous system [Internship] Transaction Agent System, Test Engineer, 微小卫星实验室, Beijing, 2017.7-2020.1 Developed an automatic test framework of Transaction Agent System to ensure new code in development does not bring bugs to the previous system Technology Applications and Expertise Specialized Skills deep learning, machine learning, biomedical signal analysis, analysis of electronic medical records person re-identification Markup/Programming/framework Python, C/C++, PyTorch Publications◎ Wu Di, Li H, Liu X, et al. Design of Gesture Recognition System Based on Multi-Channel Myoelectricity Correlation[C] 2019 IEEE Global Communications Conference (GLOBECOM 2019). IEEE, 2019: 1-6. ◎ Di Wu. “ ApneaYOLO: Respiratory Signal Driven Sleep Apnea Events Detection and Localization Model.” Journal of Biomedical and Health Informatics (JBHI 2021). ◎ Haoran Xu, Ke Lan and Di Wu. “A Semi-Supervised Machine Learning Method for Electrocardiogram and Respiratory Signal Quality Assessment of a Wearable Device: Design, Validation and Its Application.” JMIR mHealth and uHealth (JMU 2021, Q2/IF=4.312). ◎ Huiyong Li, Di Wu, Jianwei Niu, Fei Gu. “一种基于多通道肌电信号相关性的手势识别方法.” Patent, [P:CN110399846A], China. Challenges◎ None ◎ None Academic Activities◎ Reviewers of Journals: ✤Journal of Biomedical and Health Informatics (JBHI) ✤JMIR mHealth and uHealth (JMU) ◎ Reviewers of Conferences: ✤IEEE Global Communications Conference (GLOBECOM 2019)"},{"title":"tags","date":"2021-05-07T11:56:44.000Z","updated":"2021-05-07T11:58:58.004Z","comments":true,"path":"tags/index.html","permalink":"http://awesomecoder.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Linux基础","slug":"pytorch/Linux必知必会","date":"2021-12-14T16:00:00.000Z","updated":"2022-02-17T13:47:35.792Z","comments":true,"path":"2021/12/15/pytorch/Linux必知必会/","link":"","permalink":"http://awesomecoder.top/2021/12/15/pytorch/Linux%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/","excerpt":"Linux使用教程","text":"Linux使用教程 常用文件管理命令(1) ctrl c: 取消命令，并且换行(2) ctrl u: 清空本行命令(3) tab键：可以补全命令和文件名，如果补全不了快速按两下tab键，可以显示备选选项(4) ls: 列出当前目录下所有文件，蓝色的是文件夹，白色的是普通文件，绿色的是可执行文件(5) pwd: 显示当前路径(6) cd XXX: 进入XXX目录下, cd .. 返回上层目录(7) cp XXX YYY: 将XXX文件复制成YYY，XXX和YYY可以是一个路径，比如../dir_c/a.txt，表示上层目录下的dir_c文件夹下的文件a.txt(8) mkdir XXX: 创建目录XXX(9) rm XXX: 删除普通文件; rm XXX -r: 删除文件夹(10) mv XXX YYY: 将XXX文件移动到YYY，和cp命令一样，XXX和YYY可以是一个路径；重命名也是用这个命令(11) touch XXX: 创建一个文件(12) cat XXX: 展示文件XXX中的内容(13) 复制文本 windows/Linux下：Ctrl + insert，Mac下：command + c(14) 粘贴文本 windows/Linux下：Shift + insert，Mac下：command + v tmux功能： (1) 分屏。 (2) 允许断开Terminal连接后，继续运行进程。结构： 一个tmux可以包含多个session，一个session可以包含多个window，一个window可以包含多个pane。 实例： tmux: session 0: window 0: pane 0 pane 1 pane 2 ... window 1 window 2 ... session 1 session 2 ...操作： (1) tmux：新建一个session，其中包含一个window，window中包含一个pane，pane里打开了一个shell对话框。 (2) 按下Ctrl + a后手指松开，然后按%：将当前pane左右平分成两个pane。 (3) 按下Ctrl + a后手指松开，然后按\"（注意是双引号\"）：将当前pane上下平分成两个pane。 (4) Ctrl + d：关闭当前pane；如果当前window的所有pane均已关闭，则自动关闭window；如果当前session的所有window均已关闭，则自动关闭session。 (5) 鼠标点击可以选pane。 (6) 按下ctrl + a后手指松开，然后按方向键：选择相邻的pane。 (7) 鼠标拖动pane之间的分割线，可以调整分割线的位置。 (8) 按住ctrl + a的同时按方向键，可以调整pane之间分割线的位置。 (9) 按下ctrl + a后手指松开，然后按z：将当前pane全屏/取消全屏。 (10) 按下ctrl + a后手指松开，然后按d：挂起当前session。 (11) tmux a：打开之前挂起的session。 (12) 按下ctrl + a后手指松开，然后按s：选择其它session。 方向键 —— 上：选择上一项 session/window/pane 方向键 —— 下：选择下一项 session/window/pane 方向键 —— 右：展开当前项 session/window 方向键 —— 左：闭合当前项 session/window (13) 按下Ctrl + a后手指松开，然后按c：在当前session中创建一个新的window。 (14) 按下Ctrl + a后手指松开，然后按w：选择其他window，操作方法与(12)完全相同。 (15) 按下Ctrl + a后手指松开，然后按PageUp：翻阅当前pane内的内容。 (16) 鼠标滚轮：翻阅当前pane内的内容。 (17) 在tmux中选中文本时，需要按住shift键。（仅支持Windows和Linux，不支持Mac，不过该操作并不是必须的，因此影响不大） (18) tmux中复制/粘贴文本的通用方式： (1) 按下Ctrl + a后松开手指，然后按[ (2) 用鼠标选中文本，被选中的文本会被自动复制到tmux的剪贴板 (3) 按下Ctrl + a后松开手指，然后按]，会将剪贴板中的内容粘贴到光标处 vim功能： (1) 命令行模式下的文本编辑器。 (2) 根据文件扩展名自动判别编程语言。支持代码缩进、代码高亮等功能。 (3) 使用方式：vim filename 如果已有该文件，则打开它。 如果没有该文件，则打开个一个新的文件，并命名为filename模式： (1) 一般命令模式 默认模式。命令输入方式：类似于打游戏放技能，按不同字符，即可进行不同操作。可以复制、粘贴、删除文本等。 (2) 编辑模式 在一般命令模式里按下i，会进入编辑模式。 按下ESC会退出编辑模式，返回到一般命令模式。 (3) 命令行模式 在一般命令模式里按下:/?三个字母中的任意一个，会进入命令行模式。命令行在最下面。 可以查找、替换、保存、退出、配置编辑器等。操作： (1) i：进入编辑模式 (2) ESC：进入一般命令模式 (3) h 或 左箭头键：光标向左移动一个字符 (4) j 或 向下箭头：光标向下移动一个字符 (5) k 或 向上箭头：光标向上移动一个字符 (6) l 或 向右箭头：光标向右移动一个字符 (7) n&lt;Space&gt;：n表示数字，按下数字后再按空格，光标会向右移动这一行的n个字符 (8) 0 或 功能键[Home]：光标移动到本行开头 (9) $ 或 功能键[End]：光标移动到本行末尾 (10) G：光标移动到最后一行 (11) :n 或 nG：n为数字，光标移动到第n行 (12) gg：光标移动到第一行，相当于1G (13) n&lt;Enter&gt;：n为数字，光标向下移动n行 (14) /word：向光标之下寻找第一个值为word的字符串。 (15) ?word：向光标之上寻找第一个值为word的字符串。 (16) n：重复前一个查找操作 (17) N：反向重复前一个查找操作 (18) :n1,n2s/word1/word2/g：n1与n2为数字，在第n1行与n2行之间寻找word1这个字符串，并将该字符串替换为word2 (19) :1,$s/word1/word2/g：将全文的word1替换为word2 (20) :1,$s/word1/word2/gc：将全文的word1替换为word2，且在替换前要求用户确认。 (21) v：选中文本 (22) d：删除选中的文本 (23) dd: 删除当前行 (24) y：复制选中的文本 (25) yy: 复制当前行 (26) p: 将复制的数据在光标的下一行/下一个位置粘贴 (27) u：撤销 (28) Ctrl + r：取消撤销 (29) 大于号 &gt;：将选中的文本整体向右缩进一次 (30) 小于号 &lt;：将选中的文本整体向左缩进一次 (31) :w 保存 (32) :w! 强制保存 (33) :q 退出 (34) :q! 强制退出 (35) :wq 保存并退出 (36) :set paste 设置成粘贴模式，取消代码自动缩进 (37) :set nopaste 取消粘贴模式，开启代码自动缩进 (38) :set nu 显示行号 (39) :set nonu 隐藏行号 (40) gg=G：将全文代码格式化 (41) :noh 关闭查找关键词高亮 (42) Ctrl + q：当vim卡死时，可以取消当前正在执行的命令异常处理： 每次用vim编辑文件时，会自动创建一个.filename.swp的临时文件。 如果打开某个文件时，该文件的swp文件已存在，则会报错。此时解决办法有两种： (1) 找到正在打开该文件的程序，并退出 (2) 直接删掉该swp文件即可 shell 语法sshssh登录基本用法远程登录服务器： ssh user@hostname user : 用户名 hostname : IP地址或域名 第一次登录时会提示： The authenticity of host '123.57.47.211 (123.57.47.211)' can't be established.ECDSA key fingerprint is SHA256:iy237yysfCe013/l+kpDGfEG9xxHxm0dnxnAbJTPpG8.Are you sure you want to continue connecting (yes/no/[fingerprint])? 输入yes，然后回车即可。这样会将该服务器的信息记录在**~/.ssh/known_hosts**文件中。 然后输入密码即可登录到远程服务器中。 默认登录端口号为22。如果想登录某一特定端口： ssh user@hostname -p 22 配置文件创建文件**~/.ssh/config**。 然后在文件中输入： Host myserver1 HostName IP地址或域名 User 用户名Host myserver2 HostName IP地址或域名 User 用户名 之后再使用服务器时，可以直接使用别名myserver1、myserver2。 密钥登录创建密钥： ssh-keygen 然后一直回车即可。 执行结束后，**~/.ssh/**目录下会多两个文件： id_rsa：私钥 id_rsa.pub：公钥 之后想免密码登录哪个服务器，就将公钥传给哪个服务器即可。 例如，想免密登录myserver服务器。则将公钥中的内容，复制到myserver中的**~/.ssh/authorized_keys**文件里即可。 也可以使用如下命令一键添加公钥： ssh-copy-id myserver 执行命令命令格式： ssh user@hostname command 例如： ssh user@hostname ls -a 或者 # 单引号中的$i可以求值ssh myserver 'for ((i = 0; i &lt; 10; i ++ )) do echo $i; done' 或者 # 双引号中的$i不可以求值ssh myserver \"for ((i = 0; i &lt; 10; i ++ )) do echo $i; done\" git管道、环境变量与常用命令租云服务器及配置docker环境","categories":[{"name":"教程","slug":"教程","permalink":"http://awesomecoder.top/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://awesomecoder.top/tags/Linux/"}]},{"title":"pyTorch获取中间层输出的几种方法","slug":"pytorch/Pytorch获取中间层输出的几种方法","date":"2021-07-17T16:00:00.000Z","updated":"2021-07-18T14:59:28.184Z","comments":true,"path":"2021/07/18/pytorch/Pytorch获取中间层输出的几种方法/","link":"","permalink":"http://awesomecoder.top/2021/07/18/pytorch/Pytorch%E8%8E%B7%E5%8F%96%E4%B8%AD%E9%97%B4%E5%B1%82%E8%BE%93%E5%87%BA%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/","excerpt":"总结了3种输出网络中间层的方法","text":"总结了3种输出网络中间层的方法 方法1import torchimport torch.nn as nnmodel = nn.Sequential( nn.Conv2d(3, 9, 1, 1, 0, bias=False), nn.BatchNorm2d(9), nn.ReLU(inplace=True), nn.AdaptiveAvgPool2d((1, 1)), )# 假如想要获得ReLu的输出x = torch.rand([2, 3, 224, 224])for i in range(len(model)): x = model[i](x) if i == 2: ReLu_out = xprint(&#x27;ReLu_out.shape：\\n\\t&#x27;,ReLu_out.shape)print(&#x27;x.shape：\\n\\t&#x27;,x.shape) 方法2from collections import OrderedDict import torchfrom torch import nn class IntermediateLayerGetter(nn.ModuleDict): &quot;&quot;&quot; Module wrapper that returns intermediate layers from a model It has a strong assumption that the modules have been registered into the model in the same order as they are used. This means that one should **not** reuse the same nn.Module twice in the forward if you want this to work. Additionally, it is only able to query submodules that are directly assigned to the model. So if `model` is passed, `model.feature1` can be returned, but not `model.feature1.layer2`. Arguments: model (nn.Module): model on which we will extract the features return_layers (Dict[name, new_name]): a dict containing the names of the modules for which the activations will be returned as the key of the dict, and the value of the dict is the name of the returned activation (which the user can specify). &quot;&quot;&quot; def __init__(self, model, return_layers): if not set(return_layers).issubset([name for name, _ in model.named_children()]): raise ValueError(&quot;return_layers are not present in model&quot;) orig_return_layers = return_layers return_layers = &#123;k: v for k, v in return_layers.items()&#125; layers = OrderedDict() for name, module in model.named_children(): layers[name] = module if name in return_layers: del return_layers[name] if not return_layers: break super(IntermediateLayerGetter, self).__init__(layers) self.return_layers = orig_return_layers def forward(self, x): out = OrderedDict() for name, module in self.named_children(): x = module(x) if name in self.return_layers: out_name = self.return_layers[name] out[out_name] = x return out# examplem = torchvision.models.resnet18(pretrained=True)# extract layer1 and layer3, giving as names `feat1` and feat2`new_m = torchvision.models._utils.IntermediateLayerGetter(m,&#123;&#x27;layer1&#x27;: &#x27;feat1&#x27;, &#x27;layer3&#x27;: &#x27;feat2&#x27;&#125;)out = new_m(torch.rand(1, 3, 224, 224))print([(k, v.shape) for k, v in out.items()])# [(&#x27;feat1&#x27;, torch.Size([1, 64, 56, 56])), (&#x27;feat2&#x27;, torch.Size([1, 256, 14, 14]))] 方法3：hookclass TestForHook(nn.Module): def __init__(self): super().__init__() self.linear_1 = nn.Linear(in_features=2, out_features=2) self.linear_2 = nn.Linear(in_features=2, out_features=1) self.relu = nn.ReLU() self.relu6 = nn.ReLU6() self.initialize() def forward(self, x): linear_1 = self.linear_1(x) linear_2 = self.linear_2(linear_1) relu = self.relu(linear_2) relu_6 = self.relu6(relu) layers_in = (x, linear_1, linear_2) layers_out = (linear_1, linear_2, relu) return relu_6, layers_in, layers_outfeatures_in_hook = []features_out_hook = []def hook(module, fea_in, fea_out): features_in_hook.append(fea_in) features_out_hook.append(fea_out) return Nonenet = TestForHook()&quot;&quot;&quot;# 第一种写法，按照类型勾，但如果有重复类型的layer比较复杂net_chilren = net.children()for child in net_chilren: if not isinstance(child, nn.ReLU6): child.register_forward_hook(hook=hook)&quot;&quot;&quot;&quot;&quot;&quot;推荐下面我改的这种写法，因为我自己的网络中，在Sequential中有很多层，这种方式可以直接先print(net)一下，找出自己所需要那个layer的名称，按名称勾出来&quot;&quot;&quot;layer_name = &#x27;relu_6&#x27;for (name, module) in net.named_modules(): if name == layer_name: module.register_forward_hook(hook=hook)print(features_in_hook) # 勾的是指定层的输入print(features_out_hook) # 勾的是指定层的输出","categories":[{"name":"教程","slug":"教程","permalink":"http://awesomecoder.top/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"pyTorch","slug":"pyTorch","permalink":"http://awesomecoder.top/tags/pyTorch/"}]},{"title":"English Interview","slug":"经验总结/english-interview","date":"2021-04-30T12:00:00.000Z","updated":"2021-07-18T14:57:56.531Z","comments":true,"path":"2021/04/30/经验总结/english-interview/","link":"","permalink":"http://awesomecoder.top/2021/04/30/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/english-interview/","excerpt":"Introduce yourselfRespected professors, Good morning/afternoon: My name is Wu Di. It is really a great honor to have this opportunity for a interview, I would like to answer whatever you may raise, and I hope I can make a good performance today.","text":"Introduce yourselfRespected professors, Good morning/afternoon: My name is Wu Di. It is really a great honor to have this opportunity for a interview, I would like to answer whatever you may raise, and I hope I can make a good performance today. Now I will introduce myself briefly, I am 26 years old, born in Shangqiu, Henan province. I have graduated from Beihang University at 2020, my major is Aerospace Engineering. In the past 3 years, I spent most of my time on studying. I have published three academic papers and one patent which are deep learning related. Besides, I have also taken a tour to some big factories and companies when I was a master student. So I have acquired basic knowledge of deep learning in both theory and practice. And I currently working at Chinese PLA General Hospital as an algorithm engineer, where I mainly focus on how to use deep learning methods for precise medical treatment which is convenient to doctors and patients. During my job, I engaged in developing deep learning methods and responsible for the analysing of continuous biomedical signal including ECG, respiration signal, blood pressure, pluse and three-axis acceleration etc. For example, I proposed an algorithm based on YOLO which is a famous object detection method to localize the sleep apnea events during sleep. The main character of our method is, it is a 1 dimension signal suitable neural network which can predict not only where these events happened but also get the confidence of how possible they would happen. Besides, my research area also include hand-gesture recognize based on EMG, signal quality assessment based on unsupervised learning and analysis of electronic medical records. Thank you! What is your greatest strength?I feel that my strongest asset is my ability to stick to things to get them done. I feel a real sense of accomplishment when I finish a thing and it turns out just as I’d planned. I’ve set some high goals for myself. For example, I want to graduate with highest distinction. And even though I had a slow start in my freshman year, I made up for it by doing an honor’s thesis. What is your greatest weakness?I am a perfectionist and I pay very much attention to details. Sometimes I am quite captious. xx How do you feel about your progress to date?Honestly speaking I am quite content with my progress in my university studies. As a freshman in deep learning, I have accumulated considerable professional knowledge for prospective application. Besides, I made use of the extra curricular life in the university to do some meaningful things such as traveling, participating in academic forum, applying for internship in related studios as well as reading classic guides of designing, which not only broadened my horizon but also made me have a better understanding of what I have learned. I have become a student who gets more interested in what he majors in and knows what to do to improve himself. Satisfiedas I am in terms of my previous improvement, I do have to admit that there are much I can do in the future. First of all, I am not familiar with the whole designing procedure of constructing a new building, which is crucial for aqualified architect. Moreover, I should improve my sketching skills to make sure that my ideas can be understood correctly. Thirdly, learning more architecture styles is also of vital importance because only by acquiring more styles can I find mine in the future. Furthermore, improving the understanding of interior designing can help me with comprehending the relationship between interior decoration and exterior design. Knowing what I have done and how Ishould do to improve myself give me the confidence to dig in my major, I believe that I will gain satisfactory achievements in the future. What has been your greatest accomplishment? My greatest accomplishment is that I was enrolled by China Agricultural University in 2009. Tell me about your family. There are three people in my family. My parents are workers, though they have not recived college education, their honest and candid impress me a lot. What have you learned from the jobs you have held?I learned how to cooperate and exchange from my work, and I have improved the collective sense of honor. Tell me about a time when your course load was heaviest. How did you get all of your work done? I will make a good study plan. Divide time into several time periods each day, and I will do different jobs at different times. Tell me about a time when you were creative in solving a problem.First of all, I will understand the cause of the problem. Then I will summarize the methods and experience to solve this kind of problem. On the basis of this, I try to propose new solutions. xx Describe your experimental skills. During the past three years, under the strict guidance of my supervisor, I have learned systematically the theory of profession and got the basic manipulative skills about the analysis of veterinary drugs. I have successfully finished the subject “Pharmacokinetics and pharmadynamics study of compound amoxicillin intramammary infusion in lactating cows after repeated administrations”and grasped some experimental skills, such as sample extraction, sample clean-up, instrument operation. What’s your hobby? In my spare time, I like reading and travel. Reading makes me intelligent and travel broaden my horizens. Why do you choose our faculty as your major?I chose Prof Li Deyu have three reasons. First, he has a profound academic standards and he is responsive. Second, There is a high level of professional construction, especially, the biomedical engineer is ranked in the first few in the country. Third, I am also graduated from Beihang University and I am familiar with our school, so I plan to study here in the future. xxHow will you plan to devote to your potential programme?PhD degree is not a ticket that youjust do. A PhD is training on how to think, how to learn, and how to doresearch of sufficient quality that it contributes to the field that the PhD isin. I must think and plan everything efficiently and earlier. Problem solving skill/time management. During myMsc degree, besides compulsory modules which were already about the current hot topics, I have been to several seminars which interested me. There were so many seminars relatedto malaria, such as Gene drive for population suppression of the malaria mosquito Investigating signalling molecules essential formalaria parasite infection and transmission Why phd?There are several reasons accounting for my endeavor. Above all, I have been deeply impressed by the academic atmosphere. I feel so satisfied and pleasure after I finish my project write-up. I want to publish papers to prove myself. I enjoy the life as a researcher. Secondly, though I learnt a lot from my master study during the past 3 years. However, I think further study is still urgent for me to realize self-value. Life is precious. It is necessary to seize any chance for self-development, especially in this competitive modern world. In a word, I am looking forward to making a solid foundation for future profession after several years study here.","categories":[{"name":"干货","slug":"干货","permalink":"http://awesomecoder.top/categories/%E5%B9%B2%E8%B4%A7/"}],"tags":[{"name":"Interview","slug":"Interview","permalink":"http://awesomecoder.top/tags/Interview/"}]},{"title":"Neovim + Ubuntu快速搭建教程","slug":"经验总结/nvim_linux","date":"2021-04-30T12:00:00.000Z","updated":"2021-07-18T14:55:04.813Z","comments":true,"path":"2021/04/30/经验总结/nvim_linux/","link":"","permalink":"http://awesomecoder.top/2021/04/30/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/nvim_linux/","excerpt":"Neovim + Ubuntu快速搭建教程先说下目的吧，因为自己经常需要在GPU服务器上跑DL模型，大多数时候是通过本地debug之后的代码上传到服务器来跑。这样最大的问题就是效率太低，每次出错都要把代码拉下来修改。其次呢，因为是通过终端来操作大部分使用的是vim编辑器。说实话，写了这么多年的代码了vim用的是相当的不熟练。所以想学一学vim并且想要找到一个好的插件，能够满足我的一下需求： 方便文件的操作（增删改查） 支持python自动补全 可以debug 以上操作均是通过终端实现 正好在b站看到大佬TheCW出得Neovim教程发现vim效率确实高，于是花了几天自己动手搭建了一次。中间多多少少遇到了一点坑，总结一下为了以后配置更快点吧。","text":"Neovim + Ubuntu快速搭建教程先说下目的吧，因为自己经常需要在GPU服务器上跑DL模型，大多数时候是通过本地debug之后的代码上传到服务器来跑。这样最大的问题就是效率太低，每次出错都要把代码拉下来修改。其次呢，因为是通过终端来操作大部分使用的是vim编辑器。说实话，写了这么多年的代码了vim用的是相当的不熟练。所以想学一学vim并且想要找到一个好的插件，能够满足我的一下需求： 方便文件的操作（增删改查） 支持python自动补全 可以debug 以上操作均是通过终端实现 正好在b站看到大佬TheCW出得Neovim教程发现vim效率确实高，于是花了几天自己动手搭建了一次。中间多多少少遇到了一点坑，总结一下为了以后配置更快点吧。 Installation Ubuntu 18.04 LST Neovim 0.5.0+ 安装Neovim这里遇到了一点坑，就是一开始使用命令 sudo apt-get install neovim 无奈可能是apt版本太低，导致安装的Neovim版本为0.2.x。GooGle到一篇文章推荐使用ppa安装，命令如下： sudo add-apt-repository ppa:neovim-ppa/unstablesudo apt updatesudo apt install -y neovim 第一行指定为unstable可下载最新的版本. 安装Nodejs这里是踩的第二个坑，由于需要配置许多插件，其中coc.nvim在启动nvim时老弹出错误，搞了半天才发现是Nodejs版本太低。需要12.12.x以上，但是我这台服务器已经装了6.x的版本，一开始在配环境变量上耽误了许多时间，但还是没搞定。最后采用了另外一种方法，通过nvm安装。这里介绍一下，nvm是针对nodejs的专门软件，可以很方便的安装卸载各个版本。这里的命令如下： wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash 其中 v0.38.0为nvm的版本，可通过这里查看Lastest nvm version 安装好nvm之后可安装nodejs了，这里安装的版本为v14.17.3 nvm install &lt;version-number&gt;nvm use &lt;version-number&gt; 下载vim-plug插件github 自己搜吧 设置nvim的配置文件+插件与vim不同的是，nvim的配置文件在～/.config/nvim/init.vim，vim在～/.vim/.vimrc首先，进入.config文件夹并clone我放在GitHub上的配置文件 cd ~/.config/git clone https://github.com/wudi1183456665/nvim.gitcd nvimmkdir plugged tmp 启动nvim及安装插件首次启动时可通过终端输入nvim启动，强迫症的我习惯了之前的vim启动，这里可以修改zsh的启动文件打开vim ~/.zshrc 添加alias vim=’nvim’ 插件的安装也很容易，主要就是网速太慢进入nvim，输入:PlugInstall 应该会自动安装，安装完成后就可以愉快的使用了。","categories":[{"name":"干货","slug":"干货","permalink":"http://awesomecoder.top/categories/%E5%B9%B2%E8%B4%A7/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://awesomecoder.top/tags/Linux/"},{"name":"Nvim","slug":"Nvim","permalink":"http://awesomecoder.top/tags/Nvim/"}]}],"categories":[{"name":"教程","slug":"教程","permalink":"http://awesomecoder.top/categories/%E6%95%99%E7%A8%8B/"},{"name":"干货","slug":"干货","permalink":"http://awesomecoder.top/categories/%E5%B9%B2%E8%B4%A7/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://awesomecoder.top/tags/Linux/"},{"name":"pyTorch","slug":"pyTorch","permalink":"http://awesomecoder.top/tags/pyTorch/"},{"name":"Interview","slug":"Interview","permalink":"http://awesomecoder.top/tags/Interview/"},{"name":"Nvim","slug":"Nvim","permalink":"http://awesomecoder.top/tags/Nvim/"}]}